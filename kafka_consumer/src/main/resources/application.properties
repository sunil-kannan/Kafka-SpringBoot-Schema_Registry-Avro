spring.application.name=kafka_consumer
server.port=8082

# Kafka properties you can use this way also, or you can go through config files
spring.kafka.bootstrap-servers=127.0.0.1:9092


## ------- Json Deserializer -------
#consumer.group-id=kafka_group-2
#spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
#spring.kafka.consumer.properties.spring.json.value.default.type=com.learning.kafka_consumer.entity.User
#spring.kafka.consumer.properties.spring.json.trusted.packages=com.learning.kafka_consumer.entity

## This configures the JsonDeserializer to ignore type headers
#spring.kafka.consumer.properties.spring.json.use.type.headers=false

##           ----------------------------------------------------

## ---- ARVO DESERIALIZER AND SCHEMA REGISTRY  ----
#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.group-id=kafka_group-2
#spring.kafka.consumer.key-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

#spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=io.confluent.kafka.serializers.KafkaAvroDeserializer
#spring.kafka.consumer.properties.schema.registry.url=http://127.0.0.1:8081
#spring.kafka.consumer.properties.specific.avro.reader=true

